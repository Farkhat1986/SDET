name: Automated test www.globalsqa.com

on:
  workflow_dispatch:
    inputs:
      deployment_target:
        description: Choose target
        required: true
        default: test_create_customer
        type: choice
        options:
          - test_create_customer
          - test_sort_customer
          - test_delete_customer

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10  # Увеличиваем общий таймаут для job

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y firefox xvfb
          echo "Firefox version: $(firefox --version)"

      - name: Install latest Geckodriver
        run: |
          GECKODRIVER_VERSION=$(curl -s https://api.github.com/repos/mozilla/geckodriver/releases/latest | grep tag_name | cut -d '"' -f 4)
          wget https://github.com/mozilla/geckodriver/releases/download/${GECKODRIVER_VERSION}/geckodriver-${GECKODRIVER_VERSION}-linux64.tar.gz
          tar -xvzf geckodriver*.tar.gz
          chmod +x geckodriver
          sudo mv geckodriver /usr/local/bin/
          geckodriver --version

      - name: Install Python dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install webdriver-manager  # Явная установка на случай отсутствия в requirements.txt

      - name: Run Xvfb (X virtual framebuffer)
        run: Xvfb :99 -screen 0 1920x1080x24 &> /dev/null &
        env:
          DISPLAY: ":99"

      - name: Wait for services to start
        run: sleep 5  # Даем время для инициализации сервисов

      - name: Run create customer test
        if: github.event.inputs.deployment_target == 'test_create_customer'
        run: |
          export DISPLAY=:99
          pytest test/test_add_customer.py::test_create_customer --alluredir=allure-results

      - name: Run sort customer test
        if: github.event.inputs.deployment_target == 'test_sort_customer'
        run: |
          export DISPLAY=:99
          pytest test/test_sort_customer.py::test_sort_by_first_name --alluredir=allure-results

      - name: Run delete customer test
        if: github.event.inputs.deployment_target == 'test_delete_customer'
        run: |
          export DISPLAY=:99
          pytest test/test_wdelete.py::test_delete --alluredir=allure-results

      - name: Store test results
        uses: actions/upload-artifact@v4
        with:
          name: allure-results
          path: allure-results
          retention-days: 1

  generate-report:
    runs-on: ubuntu-latest
    needs: test
    name: Generate Allure report
    steps:
      - uses: actions/setup-java@v4
        with:
          distribution: 'microsoft'
          java-version: '17'

      - name: Install Allure
        run: |
          sudo wget https://github.com/allure-framework/allure2/releases/download/2.29.0/allure-2.29.0.tgz
          sudo tar -zxvf allure-2.29.0.tgz -C /opt/
          sudo ln -s /opt/allure-2.29.0/bin/allure /usr/bin/allure

      - name: Download test results
        uses: actions/download-artifact@v4
        with:
          name: allure-results
          path: allure-results

      - name: Generate Allure report
        run: allure generate -c allure-results -o _site

      - name: Store generated report
        uses: actions/upload-artifact@v4
        with:
          name: _site
          path: _site
          retention-days: 1

  publish-report:
    runs-on: ubuntu-latest
    needs: generate-report
    name: Publish report to GitHub Pages
    steps:
      - name: Download report artifact
        uses: actions/download-artifact@v4
        with:
          name: _site
          path: _site

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3

      - name: Deploy to GitHub Pages
        uses: actions/deploy-pages@v4